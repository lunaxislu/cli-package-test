#!/usr/bin/env node
import{Command as M}from"commander";import g from"path";import u from"fs-extra";function l(){let e=g.join("package.json");return u.readJSONSync(e)}async function y(e){let o=g.join(e,"package.json");return u.readJSON(o)}function P(){let e=l(),o=e.dependencies||{},n=e.devDependencies||{},s={...o,...n},m=!!s.react,a=!!s.next,r=!0;return!m&&!a&&(r=!1),r}import c from"path";import{detect as I}from"@antfu/ni";import R from"fast-glob";var N=["**/node_modules/**",".next","public","dist","build"];async function k(e){let o=await I({programmatic:!0,cwd:e});return console.log(o),o==="yarn@berry"?"yarn":o==="pnpm@6"?"pnpm":o==="bun"?"bun":o??"npm"}async function J(e){return(await R.glob("tsconfig.*",{cwd:e,deep:1,ignore:N})).length>0}import t from"kleur";import h from"fs-extra";import{execa as T}from"execa";async function v(e,o){console.log(t.cyan("Installing...."));let n=process.cwd(),s=c.resolve(n,"src"),m=c.resolve(s,"components"),a=c.resolve(m,"ui");try{let[r,d,p]=await Promise.all([k(n),y(n),J(n)]),V=d.dependencies||{},C=d.devDependencies||{};if(!P())throw new Error(t.red(`This project is not a React or Next.js project.
Please use this CLI in a React or Next.js project.`));let w=p?"tsx":"jsx",b=p?"typescript":"javascript";console.log(t.blue(`Project type: ${p?"TypeScript":"JavaScript"}. Using .${w} files.`)),await h.mkdir(a,{recursive:!0});let S=o[b].files;for(let i of S){let F=c.resolve(n,i.path),f=c.join(a,`${i.name}`);await h.copyFile(F,f),console.log(t.green(`Copied ${i.name} to ${f}`))}if(p&&!C["@types/css-modules"]){console.log(t.yellow("@types/css-modules is not installed. Installing..."));try{await T(r,[r==="npm"?"install":"add"],{cwd:n,stdio:"inherit"}),console.log(t.green("@types/css-modules has been installed successfully."))}catch(i){console.log(t.red("Failed to `${projectPackageManager===npm ? install :add} @types/cs-mdoules"),i)}}console.log(t.green(`Created folders: ${a}`))}catch(r){console.error(t.red("Failed to copy components or install @types/node:"),r)}}import _ from"fs-extra";import j from"path";import{fileURLToPath as $}from"url";var D=$(import.meta.url),E=j.dirname(D);function x(){let e=j.resolve(E,"component.json");return _.readJSONSync(e)}function O(){let e=l(),o=x(),n=new M;n.name("cli-button").description("add components to your project").version(e.version||"1.0.0","-v, --version","display the version number").command("add <button>").action(s=>v(s,o)),n.parse()}O();
//# sourceMappingURL=index.mjs.map